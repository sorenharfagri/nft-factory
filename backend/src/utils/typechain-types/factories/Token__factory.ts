/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCompatibleWithSpotMints",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableInvalidFactory",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableUnauthorizedFactory",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "SequentialMintExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "SequentialUpToTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "SpotMintTokenIdTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "holders",
        type: "bytes",
      },
    ],
    name: "mintMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002cb438038062002cb4833981810160405281019062000037919062000473565b3233838381600290816200004c919062000743565b5080600390816200005e919062000743565b506200006f620001d060201b60201c565b60008190555062000085620001d060201b60201c565b62000095620001d560201b60201c565b1015620000b557620000b463fed8210f60e01b620001fd60201b60201c565b5b5050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200012c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200012391906200086f565b60405180910390fd5b6200013d816200020760201b60201c565b62000174576040517f4d5999fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62000185826200021a60201b60201c565b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200088c565b600090565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b8060005260046000fd5b600080823b905060008111915050919050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200034982620002fe565b810181811067ffffffffffffffff821117156200036b576200036a6200030f565b5b80604052505050565b600062000380620002e0565b90506200038e82826200033e565b919050565b600067ffffffffffffffff821115620003b157620003b06200030f565b5b620003bc82620002fe565b9050602081019050919050565b60005b83811015620003e9578082015181840152602081019050620003cc565b60008484015250505050565b60006200040c620004068462000393565b62000374565b9050828152602081018484840111156200042b576200042a620002f9565b5b62000438848285620003c9565b509392505050565b600082601f830112620004585762000457620002f4565b5b81516200046a848260208601620003f5565b91505092915050565b600080604083850312156200048d576200048c620002ea565b5b600083015167ffffffffffffffff811115620004ae57620004ad620002ef565b5b620004bc8582860162000440565b925050602083015167ffffffffffffffff811115620004e057620004df620002ef565b5b620004ee8582860162000440565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200054b57607f821691505b60208210810362000561576200056062000503565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005cb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200058c565b620005d786836200058c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620006246200061e6200061884620005ef565b620005f9565b620005ef565b9050919050565b6000819050919050565b620006408362000603565b620006586200064f826200062b565b84845462000599565b825550505050565b600090565b6200066f62000660565b6200067c81848462000635565b505050565b5b81811015620006a4576200069860008262000665565b60018101905062000682565b5050565b601f821115620006f357620006bd8162000567565b620006c8846200057c565b81016020851015620006d8578190505b620006f0620006e7856200057c565b83018262000681565b50505b505050565b600082821c905092915050565b60006200071860001984600802620006f8565b1980831691505092915050565b600062000733838362000705565b9150826002028217905092915050565b6200074e82620004f8565b67ffffffffffffffff8111156200076a57620007696200030f565b5b62000776825462000532565b62000783828285620006a8565b600060209050601f831160018114620007bb5760008415620007a6578287015190505b620007b2858262000725565b86555062000822565b601f198416620007cb8662000567565b60005b82811015620007f557848901518255600182019150602085019450602081019050620007ce565b8683101562000815578489015162000811601f89168262000705565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000857826200082a565b9050919050565b62000869816200084a565b82525050565b60006020820190506200088660008301846200085e565b92915050565b612418806200089c6000396000f3fe60806040526004361061011f5760003560e01c8063715018a6116100a0578063c45a015511610064578063c45a0155146103b2578063c87b56dd146103dd578063e7be4c451461041a578063e985e9c514610443578063f2fde38b146104805761011f565b8063715018a6146103005780638da5cb5b1461031757806395d89b4114610342578063a22cb4651461036d578063b88d4fde146103965761011f565b806323b872dd116100e757806323b872dd1461021057806342842e0e1461022c5780636352211e146102485780636a6278421461028557806370a08231146102c35761011f565b806301ffc9a71461012457806306fdde0314610161578063081812fc1461018c578063095ea7b3146101c957806318160ddd146101e5575b600080fd5b34801561013057600080fd5b5061014b60048036038101906101469190611abf565b6104a9565b6040516101589190611b07565b60405180910390f35b34801561016d57600080fd5b5061017661053b565b6040516101839190611bb2565b60405180910390f35b34801561019857600080fd5b506101b360048036038101906101ae9190611c0a565b6105cd565b6040516101c09190611c78565b60405180910390f35b6101e360048036038101906101de9190611cbf565b61062b565b005b3480156101f157600080fd5b506101fa61063b565b6040516102079190611d0e565b60405180910390f35b61022a60048036038101906102259190611d29565b610688565b005b61024660048036038101906102419190611d29565b610949565b005b34801561025457600080fd5b5061026f600480360381019061026a9190611c0a565b610969565b60405161027c9190611c78565b60405180910390f35b34801561029157600080fd5b506102ac60048036038101906102a79190611d7c565b61097b565b6040516102ba929190611da9565b60405180910390f35b3480156102cf57600080fd5b506102ea60048036038101906102e59190611d7c565b610a87565b6040516102f79190611d0e565b60405180910390f35b34801561030c57600080fd5b50610315610b1e565b005b34801561032357600080fd5b5061032c610ba1565b6040516103399190611c78565b60405180910390f35b34801561034e57600080fd5b50610357610bcb565b6040516103649190611bb2565b60405180910390f35b34801561037957600080fd5b50610394600480360381019061038f9190611e05565b610c5d565b005b6103b060048036038101906103ab9190611f7a565b610d68565b005b3480156103be57600080fd5b506103c7610dba565b6040516103d49190611c78565b60405180910390f35b3480156103e957600080fd5b5061040460048036038101906103ff9190611c0a565b610de4565b6040516104119190611bb2565b60405180910390f35b34801561042657600080fd5b50610441600480360381019061043c919061205d565b610e61565b005b34801561044f57600080fd5b5061046a600480360381019061046591906120aa565b610fee565b6040516104779190611b07565b60405180910390f35b34801561048c57600080fd5b506104a760048036038101906104a29190611d7c565b611082565b005b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061050457506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105345750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461054a90612119565b80601f016020809104026020016040519081016040528092919081815260200182805461057690612119565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b5050505050905090565b60006105d882611177565b6105ed576105ec63cf4700e460e01b611223565b5b6007600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6106378282600161122d565b5050565b600061064561135c565b600154600054030390507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610678611361565b1461068557600954810190505b90565b600061069382611389565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107085761070763a114810060e01b611223565b5b600080610714846114a2565b9150915061072a81876107256114c9565b6114d1565b6107555761073f8661073a6114c9565b610fee565b610754576107536359c896be60e01b611223565b5b5b6107628686866001611515565b801561076d57600082555b600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061083b8561081788888761151b565b7c020000000000000000000000000000000000000000000000000000000017611543565b600560008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416036108c157600060018501905060006005600083815260200190815260200160002054036108bf5760005481146108be578360056000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600081036109335761093263ea553b3460e01b611223565b5b610940878787600161156e565b50505050505050565b61096483838360405180602001604052806000815250610d68565b505050565b600061097482611389565b9050919050565b600060603273ffffffffffffffffffffffffffffffffffffffff1661099e610ba1565b73ffffffffffffffffffffffffffffffffffffffff16146109f657326040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109ed9190611c78565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16610a15610dba565b73ffffffffffffffffffffffffffffffffffffffff1614610a62576040517f8d555a2500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a6a611574565b9150610a7783600161157d565b610a8082610de4565b9050915091565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610acd57610acc638f4eb60460e01b611223565b5b67ffffffffffffffff600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b3273ffffffffffffffffffffffffffffffffffffffff16610b3d610ba1565b73ffffffffffffffffffffffffffffffffffffffff1614610b9557326040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b8c9190611c78565b60405180910390fd5b610b9f600061159b565b565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060038054610bda90612119565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0690612119565b8015610c535780601f10610c2857610100808354040283529160200191610c53565b820191906000526020600020905b815481529060010190602001808311610c3657829003601f168201915b5050505050905090565b8060086000610c6a6114c9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610d176114c9565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d5c9190611b07565b60405180910390a35050565b610d73848484610688565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610db457610d9e84848484611661565b610db357610db263d1a57ed660e01b611223565b5b5b50505050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060610def82611177565b610e0457610e0363a14c4b5060e01b611223565b5b6000610e0e611790565b90506000815103610e2e5760405180602001604052806000815250610e59565b80610e38846117a7565b604051602001610e49929190612186565b6040516020818303038152906040525b915050919050565b6000601483839050610e7391906121d9565b14610eb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa90612256565b60405180910390fd5b6000601483839050610ec591906122a5565b90506000808054905060005b60148302603801359050600183019250610f08817c0200000000000000000000000000000000000000000000000000000000611543565b600560008481526020019081526020016000208190555068010000000000000001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600073ffffffffffffffffffffffffffffffffffffffff8273ffffffffffffffffffffffffffffffffffffffff16169050828160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4828060010193505050838310610ed15781600081905550505050505050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3273ffffffffffffffffffffffffffffffffffffffff166110a1610ba1565b73ffffffffffffffffffffffffffffffffffffffff16146110f957326040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110f09190611c78565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361116b5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111629190611c78565b60405180910390fd5b6111748161159b565b50565b60008161118261135c565b1161121d5761118f611361565b8211156111b9576111b260056000848152602001908152602001600020546117f7565b905061121e565b60005482101561121c5760005b60006005600085815260200190815260200160002054915081036111f557826111ee906122d6565b92506111c6565b60007c01000000000000000000000000000000000000000000000000000000008216149150505b5b5b919050565b8060005260046000fd5b600061123883610969565b905081801561127a57508073ffffffffffffffffffffffffffffffffffffffff166112616114c9565b73ffffffffffffffffffffffffffffffffffffffff1614155b156112a6576112908161128b6114c9565b610fee565b6112a5576112a463cfb3b94260e01b611223565b5b5b836007600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b60008161139461135c565b1161148c57600560008381526020019081526020016000205490506113b7611361565b8211156113dc576113c7816117f7565b61149d576113db63df2d9b4260e01b611223565b5b600081036114635760005482106113fe576113fd63df2d9b4260e01b611223565b5b5b6005600083600190039350838152602001908152602001600020549050600081031561145e5760007c01000000000000000000000000000000000000000000000000000000008216031561149d5761145d63df2d9b4260e01b611223565b5b6113ff565b60007c01000000000000000000000000000000000000000000000000000000008216031561149d575b61149c63df2d9b4260e01b611223565b5b919050565b60008060006007600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8611532868684611838565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008054905090565b611597828260405180602001604052806000815250611841565b5050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026116876114c9565b8786866040518563ffffffff1660e01b81526004016116a99493929190612354565b6020604051808303816000875af19250505080156116e557506040513d601f19601f820116820180604052508101906116e291906123b5565b60015b61173d573d8060008114611715576040519150601f19603f3d011682016040523d82523d6000602084013e61171a565b606091505b5060008151036117355761173463d1a57ed660e01b611223565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b6001156117e257600184039350600a81066030018453600a81049050806117c0575b50828103602084039350808452505050919050565b60007c0100000000000000000000000000000000000000000000000000000000821673ffffffffffffffffffffffffffffffffffffffff8316119050919050565b60009392505050565b61184b83836118bd565b60008373ffffffffffffffffffffffffffffffffffffffff163b146118b857600080549050600083820390505b61188b6000868380600101945086611661565b6118a05761189f63d1a57ed660e01b611223565b5b8181106118785781600054146118b557600080fd5b50505b505050565b600080549050600082036118dc576118db63b562e8dd60e01b611223565b5b6118e96000848385611515565b611909836118fa600086600061151b565b61190385611a43565b17611543565b6005600083815260200190815260200160002081905550600160406001901b178202600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff16169050600081036119c1576119c0632e07630060e01b611223565b5b6000838301905060008390506119d5611361565b6001830311156119f0576119ef6381647e3a60e01b611223565b5b5b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48181600101915081036119f15781600081905550505050611a3e600084838561156e565b505050565b60006001821460e11b9050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a9c81611a67565b8114611aa757600080fd5b50565b600081359050611ab981611a93565b92915050565b600060208284031215611ad557611ad4611a5d565b5b6000611ae384828501611aaa565b91505092915050565b60008115159050919050565b611b0181611aec565b82525050565b6000602082019050611b1c6000830184611af8565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b5c578082015181840152602081019050611b41565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b8482611b22565b611b8e8185611b2d565b9350611b9e818560208601611b3e565b611ba781611b68565b840191505092915050565b60006020820190508181036000830152611bcc8184611b79565b905092915050565b6000819050919050565b611be781611bd4565b8114611bf257600080fd5b50565b600081359050611c0481611bde565b92915050565b600060208284031215611c2057611c1f611a5d565b5b6000611c2e84828501611bf5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c6282611c37565b9050919050565b611c7281611c57565b82525050565b6000602082019050611c8d6000830184611c69565b92915050565b611c9c81611c57565b8114611ca757600080fd5b50565b600081359050611cb981611c93565b92915050565b60008060408385031215611cd657611cd5611a5d565b5b6000611ce485828601611caa565b9250506020611cf585828601611bf5565b9150509250929050565b611d0881611bd4565b82525050565b6000602082019050611d236000830184611cff565b92915050565b600080600060608486031215611d4257611d41611a5d565b5b6000611d5086828701611caa565b9350506020611d6186828701611caa565b9250506040611d7286828701611bf5565b9150509250925092565b600060208284031215611d9257611d91611a5d565b5b6000611da084828501611caa565b91505092915050565b6000604082019050611dbe6000830185611cff565b8181036020830152611dd08184611b79565b90509392505050565b611de281611aec565b8114611ded57600080fd5b50565b600081359050611dff81611dd9565b92915050565b60008060408385031215611e1c57611e1b611a5d565b5b6000611e2a85828601611caa565b9250506020611e3b85828601611df0565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e8782611b68565b810181811067ffffffffffffffff82111715611ea657611ea5611e4f565b5b80604052505050565b6000611eb9611a53565b9050611ec58282611e7e565b919050565b600067ffffffffffffffff821115611ee557611ee4611e4f565b5b611eee82611b68565b9050602081019050919050565b82818337600083830152505050565b6000611f1d611f1884611eca565b611eaf565b905082815260208101848484011115611f3957611f38611e4a565b5b611f44848285611efb565b509392505050565b600082601f830112611f6157611f60611e45565b5b8135611f71848260208601611f0a565b91505092915050565b60008060008060808587031215611f9457611f93611a5d565b5b6000611fa287828801611caa565b9450506020611fb387828801611caa565b9350506040611fc487828801611bf5565b925050606085013567ffffffffffffffff811115611fe557611fe4611a62565b5b611ff187828801611f4c565b91505092959194509250565b600080fd5b600080fd5b60008083601f84011261201d5761201c611e45565b5b8235905067ffffffffffffffff81111561203a57612039611ffd565b5b60208301915083600182028301111561205657612055612002565b5b9250929050565b6000806020838503121561207457612073611a5d565b5b600083013567ffffffffffffffff81111561209257612091611a62565b5b61209e85828601612007565b92509250509250929050565b600080604083850312156120c1576120c0611a5d565b5b60006120cf85828601611caa565b92505060206120e085828601611caa565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061213157607f821691505b602082108103612144576121436120ea565b5b50919050565b600081905092915050565b600061216082611b22565b61216a818561214a565b935061217a818560208601611b3e565b80840191505092915050565b60006121928285612155565b915061219e8284612155565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006121e482611bd4565b91506121ef83611bd4565b9250826121ff576121fe6121aa565b5b828206905092915050565b7f496e76616c69642061646472657373206172726179206c656e67746800000000600082015250565b6000612240601c83611b2d565b915061224b8261220a565b602082019050919050565b6000602082019050818103600083015261226f81612233565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006122b082611bd4565b91506122bb83611bd4565b9250826122cb576122ca6121aa565b5b828204905092915050565b60006122e182611bd4565b9150600082036122f4576122f3612276565b5b600182039050919050565b600081519050919050565b600082825260208201905092915050565b6000612326826122ff565b612330818561230a565b9350612340818560208601611b3e565b61234981611b68565b840191505092915050565b60006080820190506123696000830187611c69565b6123766020830186611c69565b6123836040830185611cff565b8181036060830152612395818461231b565b905095945050505050565b6000815190506123af81611a93565b92915050565b6000602082840312156123cb576123ca611a5d565b5b60006123d9848285016123a0565b9150509291505056fea2646970667358221220cdbb094affbbec0a4d7c0dcaa8c04b075e3ad1c6633816b1c0f4b0ad53bebfe364736f6c63430008180033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
